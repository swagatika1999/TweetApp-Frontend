[{"C:\\Users\\cogjava1845\\Documents\\IIHT-TWEET-APP-FRONTEND\\tweetapp\\src\\index.js":"1","C:\\Users\\cogjava1845\\Documents\\IIHT-TWEET-APP-FRONTEND\\tweetapp\\src\\reportWebVitals.js":"2","C:\\Users\\cogjava1845\\Documents\\IIHT-TWEET-APP-FRONTEND\\tweetapp\\src\\App.js":"3","C:\\Users\\cogjava1845\\Documents\\IIHT-TWEET-APP-FRONTEND\\tweetapp\\src\\components\\Login\\login.js":"4","C:\\Users\\cogjava1845\\Documents\\IIHT-TWEET-APP-FRONTEND\\tweetapp\\src\\components\\Homepage\\Homepage.js":"5","C:\\Users\\cogjava1845\\Documents\\IIHT-TWEET-APP-FRONTEND\\tweetapp\\src\\components\\UI\\Card\\Card.js":"6","C:\\Users\\cogjava1845\\Documents\\IIHT-TWEET-APP-FRONTEND\\tweetapp\\src\\components\\Users\\Users.js":"7","C:\\Users\\cogjava1845\\Documents\\IIHT-TWEET-APP-FRONTEND\\tweetapp\\src\\components\\UserTweets\\Usertweets.js":"8","C:\\Users\\cogjava1845\\Documents\\IIHT-TWEET-APP-FRONTEND\\tweetapp\\src\\components\\DisplayTweets\\DisplayTweets.js":"9","C:\\Users\\cogjava1845\\Documents\\IIHT-TWEET-APP-FRONTEND\\tweetapp\\src\\components\\UserTweets\\Usertweetsdisplay.js":"10","C:\\Users\\cogjava1845\\Documents\\IIHT-TWEET-APP-FRONTEND\\tweetapp\\src\\components\\UserTweets\\UsertweetsUpdate.js":"11","C:\\Users\\cogjava1845\\Documents\\IIHT-TWEET-APP-FRONTEND\\tweetapp\\src\\components\\UI\\Layout\\Layout.js":"12","C:\\Users\\cogjava1845\\Documents\\IIHT-TWEET-APP-FRONTEND\\tweetapp\\src\\components\\Users\\UsersDisplay\\UsersDisplay.js":"13","C:\\Users\\cogjava1845\\Documents\\IIHT-TWEET-APP-FRONTEND\\tweetapp\\src\\components\\Users\\ParticularUsertweets\\ParticularUsertweets.js":"14","C:\\Users\\cogjava1845\\Documents\\IIHT-TWEET-APP-FRONTEND\\tweetapp\\src\\components\\Comments\\Comments.js":"15","C:\\Users\\cogjava1845\\Documents\\IIHT-TWEET-APP-FRONTEND\\tweetapp\\src\\components\\Registration\\Registration.js":"16","C:\\Users\\cogjava1845\\Documents\\IIHT-TWEET-APP-FRONTEND\\tweetapp\\src\\components\\ForgotPassword\\ForgotPassword.js":"17"},{"size":628,"mtime":1659523505480,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"19"},{"size":1432,"mtime":1661703826246,"results":"21","hashOfConfig":"19"},{"size":4508,"mtime":1661657940275,"results":"22","hashOfConfig":"19"},{"size":1337,"mtime":1661657409976,"results":"23","hashOfConfig":"19"},{"size":211,"mtime":1659856812762,"results":"24","hashOfConfig":"19"},{"size":1143,"mtime":1661657540813,"results":"25","hashOfConfig":"19"},{"size":3198,"mtime":1661657516099,"results":"26","hashOfConfig":"19"},{"size":4203,"mtime":1661667358558,"results":"27","hashOfConfig":"19"},{"size":4245,"mtime":1661703794636,"results":"28","hashOfConfig":"19"},{"size":2900,"mtime":1661704084998,"results":"29","hashOfConfig":"19"},{"size":257,"mtime":1661140677574,"results":"30","hashOfConfig":"19"},{"size":4296,"mtime":1661656885935,"results":"31","hashOfConfig":"19"},{"size":4410,"mtime":1661667311315,"results":"32","hashOfConfig":"19"},{"size":5273,"mtime":1661538305062,"results":"33","hashOfConfig":"19"},{"size":12219,"mtime":1661704365330,"results":"34","hashOfConfig":"19"},{"size":5233,"mtime":1661657874032,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"1uknvub",{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"39"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"39"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"39"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"39"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"39"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"39"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"39"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"39"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"39"},"C:\\Users\\cogjava1845\\Documents\\IIHT-TWEET-APP-FRONTEND\\tweetapp\\src\\index.js",[],[],[],"C:\\Users\\cogjava1845\\Documents\\IIHT-TWEET-APP-FRONTEND\\tweetapp\\src\\reportWebVitals.js",[],[],"C:\\Users\\cogjava1845\\Documents\\IIHT-TWEET-APP-FRONTEND\\tweetapp\\src\\App.js",["97","98"],[],"C:\\Users\\cogjava1845\\Documents\\IIHT-TWEET-APP-FRONTEND\\tweetapp\\src\\components\\Login\\login.js",["99","100","101","102","103","104"],[],"import React,{useState} from 'react';\r\nimport Card from '../UI/Card/Card';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './login.css';\r\nimport {  Link } from \"react-router-dom\";\r\nimport {useNavigate,useParams} from 'react-router-dom';\r\nimport image1 from '../../assets/frontImage.jpg';\r\nimport swal from'sweetalert';\r\nimport axios from 'axios';\r\n\r\n\r\nconst Login=(props)=>{\r\n    const [username,setUserName]=useState('');\r\n    const [password,setPassword]=useState('');\r\n    \r\n    const navigate=useNavigate();\r\n   \r\n    const handleSubmit=async(e)=>{\r\n        e.preventDefault();\r\n        const requestBody={\r\n            loginId:username,\r\n            password: password\r\n        }\r\n        \r\n        console.log(requestBody);\r\n        try{\r\n         const response=await axios.post('http://localhost:8081/login',requestBody)\r\n         let token=response.data.token;\r\n         let usrname=response.data.loginId;\r\n         localStorage.setItem('usrname',usrname)\r\n         localStorage.setItem('token',token);\r\n         if(token !== null){\r\n            swal(\"Success\",\"Successfully logged in\",{\r\n                buttons:false,\r\n                timer:2000,\r\n            })}\r\n            navigate('/homepage')\r\n         console.log(response);\r\n        }\r\n        catch(e){\r\n            swal(\"Invalid username or password\");\r\n            console.log(e);}\r\n       \r\n        setUserName('');\r\n        setPassword('');\r\n    };\r\n    const usernameHandler=(e)=>{\r\n        setUserName(e.target.value)\r\n       \r\n    }\r\n    const passwordHandler=(e)=>{\r\n        setPassword(e.target.value)\r\n    }\r\n    const handleForgotPassword=(e)=>{\r\n        e.preventDefault();\r\n        var wrapper=document.createElement('h1')\r\n        if(username===''){\r\n            swal({\r\n                content:wrapper,\r\n                title:\"please enter username\",\r\n                buttons:false,\r\n                timer:2000\r\n            })}\r\n            else{\r\n                navigate(`/${username}/ForgotPassword`)\r\n            }\r\n        \r\n    }\r\n    return(\r\n    <section class=\"vh-100\">\r\n    <div class=\"container-fluid\">\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-6 px-0 d-none d-sm-block\">\r\n                <img src={image1} class=\"w-100 vh-100\"  alt=\"sample image\"></img>\r\n            </div>\r\n\r\n            <div class=\"col-sm-6 text-black\">\r\n                <div class=\"p-4 p-lg-5 text-black\">\r\n                    <form onSubmit={handleSubmit}>\r\n                    <div class=\"d-flex align-items-center mb-3 pb-1\">\r\n                    <h2 class=\"h2 fw-bold mb-0\">Just Tweet It </h2>\r\n                    </div>\r\n                        <h3 className=\"h3-text\" class=\"fw-normal mb-3 pb-3\">Log in</h3>\r\n                        <div class=\"form-outline mb-4\">\r\n                        <label class=\"form-label\" htmlFor=\"username\">Username</label>\r\n                            <input type=\"text\"\r\n                                    id=\"username\"\r\n                                    name=\"username\"\r\n                                    value={username}\r\n                                    onChange={usernameHandler}\r\n                                    class=\"form-control form-control-lg\" />\r\n                           \r\n                           \r\n                        </div>\r\n                        <div class=\"form-outline mb-4\">\r\n                        <label class=\"form-label\" htmlFor=\"password\">Password</label>\r\n                            <input type=\"password\" \r\n                                   id=\"password\"\r\n                                   name=\"password\"\r\n                                   value={password}\r\n                                   onChange={passwordHandler}\r\n                                   class=\"form-control form-control-lg\" />\r\n                           \r\n\r\n                        </div>\r\n                        <div class=\"pt-1 mb-4\">\r\n                            <button class=\"btn btn-info btn-lg btn-block\" type=\"submit\">Login</button>\r\n                        </div>\r\n                        <div>\r\n                        <p class=\"small mb-5 pb-lg-2\">Forgot Password? <a href=\"\" onClick={(e)=>handleForgotPassword(e)}>forgot password</a></p>\r\n                        </div>\r\n                        <p>Don't have an account? <a href=\"\" onClick={(e)=>navigate(\"/Register\")}>Register here</a></p>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n      </div>\r\n    </div> \r\n    </section>\r\n    )\r\n}\r\n\r\nexport default Login;","C:\\Users\\cogjava1845\\Documents\\IIHT-TWEET-APP-FRONTEND\\tweetapp\\src\\components\\Homepage\\Homepage.js",["105","106","107","108","109","110"],[],"import React, { useState } from \"react\";\r\nimport './Homepage.css';\r\nimport { useNavigate } from \"react-router\";\r\nimport Displaytweets from \"../DisplayTweets/DisplayTweets\";\r\nimport swal from'sweetalert';\r\nconst Homepage=(props)=>{\r\n    const navigate=useNavigate();\r\n    const loginId=localStorage.getItem('usrname');\r\n\r\n    const logoutHandler=(e)=>{\r\n       \r\n            swal(\"Success\",\"successfully logged out\",{\r\n                buttons:false,\r\n                timer:2000,\r\n            })\r\n        .then(navigate(\"/\"))\r\n    }\r\n    \r\n    return(\r\n        <>\r\n       <div className=\"header\" >\r\n           <a href=\"\" className=\"logo\">Just Tweet it !</a>\r\n\r\n           <div className=\"header-left\">\r\n              <a href=\"\" className=\"active\"> Tweets </a>\r\n              <a href=\"\" onClick={()=>navigate(\"/homepage/yourtweets\")}> Your Tweets </a>\r\n              <a href=\"\" onClick={()=>navigate(\"/homepage/users\")}> Users </a>\r\n           </div>\r\n            <div className=\"header-right\">\r\n                <a href=\"\" onClick={(e)=>logoutHandler()}>Logout</a>\r\n            </div>      \r\n       </div>\r\n       \r\n            <div className=\"h3\">\r\n                <h3>Welcome {loginId} !</h3>\r\n            </div>\r\n            <div>\r\n                <Displaytweets />\r\n            </div>\r\n\r\n       </>\r\n    )\r\n}\r\n\r\nexport default Homepage;","C:\\Users\\cogjava1845\\Documents\\IIHT-TWEET-APP-FRONTEND\\tweetapp\\src\\components\\UI\\Card\\Card.js",[],[],"C:\\Users\\cogjava1845\\Documents\\IIHT-TWEET-APP-FRONTEND\\tweetapp\\src\\components\\Users\\Users.js",["111","112","113","114","115","116","117","118"],[],"import React, { useEffect, useState } from \"react\";\r\nimport axios from 'axios';\r\nimport './Users.css';\r\nimport { useNavigate } from \"react-router\";\r\nimport UsersDisplay from \"./UsersDisplay/UsersDisplay\";\r\nimport swal from'sweetalert';\r\nconst Users=(props)=>{\r\n    \r\n    const navigate=useNavigate();\r\n    const logoutHandler=(e)=>{\r\n       \r\n        swal(\"Success\",\"successfully logged out\",{\r\n            buttons:false,\r\n            timer:8000,\r\n        })\r\n        navigate(\"/\")\r\n}\r\n   \r\n    return(\r\n        <>\r\n         <div className=\"header\" >\r\n           <a href=\"\" className=\"logo\">Just Tweet it !</a>\r\n\r\n           <div className=\"header-left\">\r\n              <a href=\"\" onClick={()=>navigate(\"/homepage\")}> Tweets </a>\r\n              <a href=\"\"  onClick={()=>navigate(\"/homepage/yourtweets\")}> Your Tweets </a>\r\n              <a href=\"\" className=\"active\"> Users </a>\r\n           </div>\r\n            <div className=\"header-right\">\r\n                <a href=\"\" onClick={(e)=>logoutHandler()}>Logout</a>\r\n            </div>      \r\n       </div>\r\n\r\n            <div><UsersDisplay /></div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Users;","C:\\Users\\cogjava1845\\Documents\\IIHT-TWEET-APP-FRONTEND\\tweetapp\\src\\components\\UserTweets\\Usertweets.js",["119","120","121","122","123","124","125"],[],"import React, { useEffect, useState } from \"react\";\r\nimport './Usertweets.css';\r\nimport { useNavigate } from \"react-router\";\r\nimport axios from 'axios';\r\nimport Button from '@material-ui/core/Button';\r\nimport Usertweetsdisplay from './Usertweetsdisplay';\r\nimport swal from'sweetalert';\r\n\r\nconst Usertweets=(props)=>{\r\n    const navigate=useNavigate();\r\n    const[title,setTitle]=useState('');\r\n    const[description,setDescription]=useState('');\r\n    const loginId=localStorage.getItem('usrname');\r\n    const postTweetHandler=async()=>{\r\n      \r\n\r\n        const requestBody={\r\n            title:title,\r\n            tweet:description\r\n        }\r\n        console.log(requestBody);\r\n\r\n        try{\r\n            const response=await axios.post(`http://localhost:8081/postTweet/${loginId}/add`,requestBody);\r\n            const tweetid=localStorage.setItem(response.data.tweetId);\r\n            console.log(response);\r\n            swal(\"Success\",\"Tweet posted Successfully\",{\r\n                buttons:false,\r\n                timer:2000 });\r\n\r\n        }catch(e){}\r\n    }\r\n\r\n    const logoutHandler=(e)=>{\r\n       \r\n        swal(\"Success\",\"successfully logged out\",{\r\n            buttons:false,\r\n            timer:8000,\r\n        })\r\n        navigate(\"/\")\r\n}\r\n    const titleHandler=(e)=>{\r\n        setTitle(e.target.value);\r\n    }\r\n\r\n    const descriptionHandler=(e)=>{\r\n        setDescription(e.target.value);\r\n    }\r\n    return(\r\n        <>\r\n       <div className=\"header\" >\r\n           <a href=\"\" className=\"logo\">Just Tweet it !</a>\r\n\r\n           <div className=\"header-left\">\r\n              <a href=\"\" onClick={()=>navigate(\"/homepage\")}> Tweets </a>\r\n              <a href=\"\" className=\"active\"> Your Tweets </a>\r\n              <a href=\"\" onClick={()=>navigate(\"/homepage/users\")}> Users </a>\r\n           </div>\r\n            <div className=\"header-right\">\r\n                <a href=\"\" onClick={(e)=>logoutHandler()} >Logout</a>\r\n            </div>      \r\n       </div>\r\n       \r\n            <div className=\"h3\">\r\n                <h3>Welcome {loginId} !</h3>\r\n            </div>\r\n        <div>\r\n        <form onSubmit={postTweetHandler}>\r\n            <br></br>\r\n            <div className=\"box1\">\r\n                <textarea \r\n                    rows=\"2\" \r\n                    cols=\"50\" \r\n                    name=\"title\"  \r\n                    placeholder=\"Add the title\" \r\n                    value={title}\r\n                    onChange={titleHandler}\r\n                    required />\r\n            </div>\r\n            <div className=\"box1\">\r\n                <textarea \r\n                     rows=\"5\" \r\n                     cols=\"50\"\r\n                    name=\"description\" \r\n                    placeholder=\"Want to express ? Express it.\" \r\n                    value={description}\r\n                    onChange={descriptionHandler}\r\n                    required />\r\n            </div>\r\n           \r\n            <div className=\"button\">\r\n                <Button type=\"submit\" color=\"primary\" variant=\"contained\">Post Tweet</Button>\r\n            </div>\r\n        </form>\r\n        </div>\r\n        <div>\r\n            <Usertweetsdisplay />\r\n        </div>\r\n       </>\r\n    )\r\n}\r\n\r\nexport default Usertweets;","C:\\Users\\cogjava1845\\Documents\\IIHT-TWEET-APP-FRONTEND\\tweetapp\\src\\components\\DisplayTweets\\DisplayTweets.js",["126"],[],"import React, { useEffect, useState } from \"react\";\r\nimport './DisplayTweets.css'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {  Link } from \"react-router-dom\";\r\nimport formatDistance from 'date-fns/formatDistance'\r\nimport { ListItem,ListItemText } from \"@material-ui/core\";\r\nimport Moment from 'moment';\r\nimport ChatBubbleIcon from '@mui/icons-material/ChatBubble';\r\nimport ThumbUpIcon from '@mui/icons-material/ThumbUp';\r\nimport Button from '@material-ui/core/Button';\r\nimport {cyan} from \"@mui/material/colors\";\r\nimport {Stack} from 'react-bootstrap';\r\nimport axios from 'axios';\r\n\r\n\r\nconst Displaytweets=()=>{\r\n    const [tweetList,setTweetList]=useState([]);\r\n    const [isLikePressed,setIslikePressed]=useState(false);\r\n\r\n    const formattedDate =(date)=> {\r\n        const datetimestr=date\r\n        const str=formatDistance(\r\n            new Date(datetimestr),\r\n            new Date()\r\n        );\r\n        return str;\r\n    }\r\n    \r\n\r\n      \r\n    const displayTweetHandler=async(e)=>{\r\n        //e.preventDefault();\r\n\r\n        try{\r\n            const response=await axios.get(`http://localhost:8081/all`);\r\n            console.log(response.data)\r\n            const listtweet=await response.data;\r\n            setTweetList(listtweet);\r\n            console.log(listtweet);\r\n\r\n            }catch(e){console.log(e)}\r\n    }\r\n\r\n    const likeTweetHandler=async(likespressed,tweetId)=>{\r\n        const loginId=localStorage.getItem('usrname');\r\n        const rqbody={\r\n            islikePressed:likespressed\r\n        }\r\n        \r\n        try{\r\n            setIslikePressed(likespressed);\r\n            const res=await axios.put(`http://localhost:8081/tweets/${loginId}/like/${tweetId}`,rqbody)\r\n            console.log(res);\r\n            window.location.reload(false);\r\n        }catch(e){console.log(e);}\r\n        setIslikePressed(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n       \r\n            displayTweetHandler();\r\n            \r\n    },[]);\r\n\r\n    return(\r\n        <>\r\n           \r\n                {\r\n                    tweetList.map((i) => {\r\n                       \r\n                       \r\n                return(\r\n                    <>\r\n                        \r\n                        <div className=\"post\">\r\n                            <div className=\"post__header\">\r\n                                <ListItem>\r\n                                    <ListItemText  primary={<h5 style={{fontWeight:\"bold\"}}>{i.loginId}</h5>}\r\n                                    secondary={\r\n                                    <>\r\n                                    <div><p style={{fontWeight:\"bold\"}}>{formattedDate(i.creationDate)} ago</p></div>\r\n                                    <div><p style={{fontWeight:\"bold\"}}>{Moment(i.creationDate).format(\"DD/MM/YYYY\")}</p></div></>} \r\n                                    /> \r\n                                </ListItem>  \r\n                                <ListItem>\r\n                                        <h5>{i.title}</h5>\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                    <h6>{i.tweet} </h6>\r\n                                </ListItem>\r\n                        \r\n                            <Stack direction=\"horizontal\" gap={2} style={{padding:\"10px\"}}>\r\n                               \r\n                                <Button color=\"primary\" variant=\"contained\">\r\n                                <Link to={`/Comments/${i.tweetId}`} >\r\n                                <ChatBubbleIcon fontSize=\"small\" style={{color: cyan[50]}}>    \r\n                                </ChatBubbleIcon></Link>\r\n                                </Button>\r\n                                <Button color=\"primary\" variant=\"contained\" onClick={(e)=>likeTweetHandler(true,i.tweetId)}><ThumbUpIcon fontSize=\"small\" style={{color: cyan[50]}} />{i.likes}</Button>\r\n                            \r\n                            </Stack>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                   \r\n                    </>\r\n                    )\r\n                    })\r\n                }\r\n\r\n    \r\n        \r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default Displaytweets;","C:\\Users\\cogjava1845\\Documents\\IIHT-TWEET-APP-FRONTEND\\tweetapp\\src\\components\\UserTweets\\Usertweetsdisplay.js",["127"],[],"C:\\Users\\cogjava1845\\Documents\\IIHT-TWEET-APP-FRONTEND\\tweetapp\\src\\components\\UserTweets\\UsertweetsUpdate.js",["128"],[],"C:\\Users\\cogjava1845\\Documents\\IIHT-TWEET-APP-FRONTEND\\tweetapp\\src\\components\\UI\\Layout\\Layout.js",["129"],[],"import React from \"react\";\r\nimport './Layout.css';\r\nconst Layout=()=>{\r\n    return(\r\n    <>\r\n         <div className=\"header\" >\r\n           <a href=\"\" className=\"logo\"><h3>Just Tweet it !</h3></a>\r\n        </div>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default Layout;","C:\\Users\\cogjava1845\\Documents\\IIHT-TWEET-APP-FRONTEND\\tweetapp\\src\\components\\Users\\UsersDisplay\\UsersDisplay.js",[],[],"C:\\Users\\cogjava1845\\Documents\\IIHT-TWEET-APP-FRONTEND\\tweetapp\\src\\components\\Users\\ParticularUsertweets\\ParticularUsertweets.js",["130","131"],[],"import React,{useEffect, useState} from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport axios from 'axios';\r\nimport {useParams} from \"react-router-dom\";\r\nimport ChatBubbleIcon from '@mui/icons-material/ChatBubble';\r\nimport ThumbUpIcon from '@mui/icons-material/ThumbUp';\r\nimport Button from '@material-ui/core/Button';\r\nimport {cyan} from \"@mui/material/colors\";\r\nimport './ParticularUsertweets.css';\r\nimport {Stack} from 'react-bootstrap';\r\nimport formatDistance from 'date-fns/formatDistance'\r\nimport { ListItem,ListItemText } from \"@material-ui/core\";\r\nimport Moment from 'moment';\r\nimport Layout from \"../../UI/Layout/Layout\";\r\n\r\nconst ParticularUsertweets=()=>{\r\n    const [usertweets,setUsertweets]=useState([]);\r\n    const [isLikePressed,setIslikePressed]=useState(false);\r\n    const{ username }=useParams();\r\n    const getUsertweets= async ()=>{\r\n        const response=await axios.get(`http://localhost:8081/tweets/${username}`)\r\n       console.log(response.data);\r\n       const listtweet=await response.data\r\n       setUsertweets(listtweet);\r\n       if(listtweet.length===0 || listtweet.length==='undefined'){\r\n          return( <h2>User has not posted the tweet yet!</h2>)\r\n       }\r\n     }\r\n\r\n     const formattedDate =(date)=> {\r\n        const datetimestr=date\r\n        const str=formatDistance(\r\n            new Date(datetimestr),\r\n            new Date()\r\n        );\r\n        return str;\r\n    }\r\n     const likeTweetHandler=async(likespressed,tweetId)=>{\r\n        const loginId=localStorage.getItem('usrname');\r\n        const rqbody={\r\n            islikePressed:likespressed\r\n        }\r\n        \r\n        try{\r\n            setIslikePressed(likespressed);\r\n            const res=await axios.put(`http://localhost:8081/tweets/${loginId}/like/${tweetId}`,rqbody)\r\n            console.log(res);\r\n            window.location.reload(false);\r\n        }catch(e){console.log(e);}\r\n        setIslikePressed(false)\r\n    }\r\n     useEffect(()=>{\r\n        getUsertweets();\r\n     },[])\r\n\r\n     return(\r\n        <> \r\n        <div>\r\n            <Layout />\r\n        </div>\r\n        <br></br> \r\n        <div class=\"text-center\"><h3>{username}'s tweet</h3></div>         \r\n        <br></br>\r\n        {usertweets.length > 0 ? (\r\n           \r\n            usertweets.map((i) => {\r\n               \r\n                return(\r\n                <>\r\n                    \r\n                    <div className=\"post\">\r\n                            <div className=\"post__header\">\r\n                                <ListItem>\r\n                                    <ListItemText  primary={<h5 style={{fontWeight:\"bold\"}}>{i.loginId}</h5>}\r\n                                    secondary={\r\n                                        <>\r\n                                        <div><p style={{fontWeight:\"bold\"}}>{formattedDate(i.creationDate)} ago</p></div>\r\n                                        <div><p style={{fontWeight:\"bold\"}}>{Moment(i.creationDate).format(\"DD/MM/YYYY\")}</p></div></>} \r\n                                        /> \r\n                                </ListItem>  \r\n                                <ListItem>\r\n                                        <h5>{i.title}</h5>\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                    <h6>{i.tweet} </h6>\r\n                                </ListItem>\r\n                        \r\n                            <Stack direction=\"horizontal\" gap={2} style={{padding:\"10px\"}}>\r\n                               \r\n                                <Button color=\"primary\" variant=\"contained\"><ChatBubbleIcon fontSize=\"small\" style={{color: cyan[50]}}>\r\n                                    \r\n                                </ChatBubbleIcon>\r\n                                </Button>\r\n                                <Button color=\"primary\" variant=\"contained\" onClick={e=>likeTweetHandler(true,i.tweetId)}><ThumbUpIcon fontSize=\"small\" style={{color: cyan[50]}} />{i.likes}</Button>\r\n                            \r\n                            </Stack>\r\n                        </div>\r\n                    </div>\r\n               \r\n                </>\r\n                )\r\n            })\r\n        ) : (\r\n            <>\r\n                <h2 class=\"text-center\"> {username} has not posted anything! </h2>\r\n            </>\r\n        )}\r\n\r\n  \r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ParticularUsertweets;","C:\\Users\\cogjava1845\\Documents\\IIHT-TWEET-APP-FRONTEND\\tweetapp\\src\\components\\Comments\\Comments.js",["132","133","134"],[],"import React, { useEffect, useState } from \"react\";\r\nimport Layout from \"../UI/Layout/Layout\";\r\nimport { ListItem,ListItemText } from \"@material-ui/core\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Moment from 'moment';\r\nimport axios from 'axios';\r\nimport formatDistance from 'date-fns/formatDistance'\r\nimport './Comments.css';\r\nimport {useHistory,useParams,useNavigate} from \"react-router-dom\";\r\nimport swal from'sweetalert';\r\n\r\nconst Comments=()=>{\r\n    const {id}=useParams()\r\n    const[commentList,setCommentList]=useState([]);\r\n    const[tweet,setTweet]=useState([]);\r\n    const[comment,setComment]=useState('');\r\n\r\n    const formattedDate =(date)=> {\r\n        const datetimestr=date\r\n        const str=formatDistance(\r\n            new Date(datetimestr),\r\n            new Date()\r\n        );\r\n        return str;\r\n    }\r\n\r\n    const getUserComments= async ()=>{\r\n        const response=await axios.get(`http://localhost:8081/tweets/all/comments/${id}`)\r\n       console.log(response.data);\r\n       const listComment=await response.data\r\n       setCommentList(listComment);\r\n     }\r\n\r\n\r\n     const getUsertweet= async ()=>{\r\n        const response=await axios.get(`http://localhost:8081/tweetsbyId/${id}`)\r\n       console.log(response.data);\r\n       const tweets=await response.data\r\n       console.log(tweets)\r\n       setTweet(tweets);\r\n     }\r\n\r\n     const postCommentHandler=async()=>{\r\n      \r\n        const requestBody={\r\n            comment:comment\r\n        }\r\n        console.log(requestBody);\r\n        const username=localStorage.getItem('usrname');\r\n        try{\r\n            const response=await axios.post(`http://localhost:8081/tweets/${username}/reply/${id}`,requestBody);\r\n            console.log(response);\r\n            swal(\"Success\",\"Comment posted Successfully\",{\r\n                buttons:false,\r\n                timer:2000 });\r\n\r\n        }catch(e){}\r\n    }\r\n    const commentHandler=(e)=>{\r\n        setComment(e.target.value);\r\n    }\r\n\r\n     useEffect(()=>{\r\n        getUsertweet();\r\n        getUserComments();\r\n    },[])\r\n    return(\r\n        <>\r\n            <div>\r\n                <Layout />\r\n            </div>\r\n            {\r\n                <>\r\n                        <div className=\"post\">\r\n                            <div className=\"post__header\">\r\n                                <ListItem>\r\n                                    <ListItemText  primary={<h5 style={{fontWeight:\"bold\"}}>{tweet.loginId}</h5>}\r\n                                     secondary={\r\n                                        <>\r\n                                        <div><p style={{fontWeight:\"bold\"}}>{Moment(tweet.creationDate).format(\"  HH:mm\")}</p></div>\r\n                                        <div><p style={{fontWeight:\"bold\"}}>{Moment(tweet.creationDate).format(\" DD/MM/YYYY\")}</p></div></>} \r\n                                      \r\n                                    /> \r\n                                </ListItem>  \r\n                                <ListItem>\r\n                                        <h5>{tweet.title}</h5>\r\n                                </ListItem>\r\n                                <ListItem>\r\n                                    <h6>{tweet.tweet} </h6>\r\n                                </ListItem>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    </>\r\n                }\r\n            <div ><h5 style={{textAlign:\"center\"}}>Comments</h5>\r\n            <div>\r\n            <form onSubmit={postCommentHandler}>\r\n           \r\n            <div className=\"box1\">\r\n                <textarea \r\n                    rows=\"5\" \r\n                    cols=\"50\" \r\n                    name=\"comment\"  \r\n                    placeholder=\"Post your thoughts / reply\" \r\n                    value={comment}\r\n                    onChange={commentHandler}\r\n                    required />\r\n            </div>\r\n            <div className=\"button\">\r\n                <Button type=\"submit\" color=\"primary\" variant=\"contained\">Post Comment</Button>\r\n            </div>\r\n            </form>\r\n            </div>\r\n            \r\n            {\r\n            commentList.map((i) => {\r\n               \r\n                return(\r\n                <>\r\n                    \r\n                    <div className=\"post1\">\r\n                        <div className=\"post__header\">\r\n                            <ListItem>\r\n                                <ListItemText  primary={<h5 style={{fontWeight:\"bold\"}}>{i.loginId}</h5>}\r\n                                secondary={\r\n                                    <>\r\n                                    <div><p style={{fontWeight:\"bold\"}}>{formattedDate(i.commentPostedDate)} ago</p></div>\r\n                                    <div><p style={{fontWeight:\"bold\"}}>{Moment(i.commentPostedDate).format(\"DD/MM/YYYY\")}</p></div></>} \r\n                                 /> \r\n                            </ListItem>  \r\n                            <ListItem>\r\n                                <h6>{i.comment} </h6>\r\n                            </ListItem>\r\n                    </div>\r\n                </div>\r\n                \r\n               \r\n                </>\r\n                )\r\n            })\r\n        }\r\n        </div>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default Comments;","C:\\Users\\cogjava1845\\Documents\\IIHT-TWEET-APP-FRONTEND\\tweetapp\\src\\components\\Registration\\Registration.js",["135","136","137","138","139"],[],"C:\\Users\\cogjava1845\\Documents\\IIHT-TWEET-APP-FRONTEND\\tweetapp\\src\\components\\ForgotPassword\\ForgotPassword.js",["140","141","142","143"],[],"import React, { useState } from \"react\";\r\nimport axios from 'axios';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Card from 'react-bootstrap/Card';\r\nimport image1 from '../../assets/forgotPassword1.jpg';\r\nimport Button from '@material-ui/core/Button';\r\nimport SelectInput from \"@material-ui/core/Select/SelectInput\";\r\nimport './ForgotPassword.css';\r\nimport swal from'sweetalert';\r\n\r\n\r\nconst ForgotPassword=()=>{\r\n    \r\n    const username=localStorage.getItem('usrname');\r\n    const[pwdword,setPwdword]=useState({\r\n        password:'',\r\n        confirmPassword:''\r\n    });\r\n\r\n    const [error,setError]=useState({\r\n        password:'',\r\n        confirmPassword:''\r\n    })\r\n\r\n    const onPasswordChange = (e) =>{\r\n       \r\n        const{name,value}=e.target;\r\n        setPwdword(prev=>({\r\n            ...prev,\r\n            [name]: value\r\n        }));\r\n        validateInput(e);\r\n    }\r\n    const validateInput=(e)=>{\r\n       \r\n        let{name,value}=e.target;\r\n        setError(prev=>{\r\n            const stateObj={...prev,[name]:\"\"};\r\n            switch(name){\r\n                case \"password\":\r\n                    if(!value){\r\n                        stateObj[name]=\"please enter the password\";\r\n                    }else if(pwdword.confirmPassword && value!== pwdword.confirmPassword){\r\n                        stateObj[\"confirmPassword\"]=\"Password and Confirm Password doen not match\";\r\n                    }else{\r\n                        stateObj[\"confirmPassword\"]=pwdword.confirmPassword?\"\":error.confirmPassword;\r\n                    }\r\n                    break;\r\n                case \"confirmPassword\":\r\n                    if(!value){\r\n                        stateObj[name]=\"please enter confirm password\";\r\n                    }else if(pwdword.password && value!==pwdword.password){\r\n                        stateObj[name]=\"password and confirm password does not match\";\r\n                    }\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            return stateObj;\r\n        });\r\n    }\r\n\r\n    const getPassword=async(e)=>{\r\n        e.preventDefault()\r\n        const reqBody={\r\n            password:pwdword.password,\r\n            confirmPassword:pwdword.confirmPassword\r\n        }\r\n        try{\r\n            const res=await axios.put(`http://localhost:8081/${username}/forgot`,reqBody)\r\n            console.log(res);\r\n            swal(\"Success\",\"Password updated Successfully\",{\r\n                buttons:false,\r\n                timer:2000})\r\n\r\n        }catch(error){console.log(error)}\r\n    }\r\n    return(\r\n        <section class=\"vh-100\">\r\n    <div class=\"container-fluid\">\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-6 px-0 d-none d-sm-block\">\r\n                <img src={image1} class=\"w-100 vh-100\"  alt=\"sample image\"></img>\r\n            </div>\r\n\r\n            <div class=\"col-sm-6 text-black\">\r\n                <div class=\"p-4 p-lg-5 text-black\">\r\n                    <form onSubmit={getPassword}>\r\n                    <div class=\"d-flex align-items-center mb-3 pb-1\">\r\n                    <h2 class=\"h2 fw-bold mb-0\">Forgot Password? Don't worry change now. </h2>\r\n                    </div>\r\n                        \r\n                        <div class=\"form-outline mb-4\">\r\n                        <label class=\"form-label\" htmlFor=\"password\">Password</label>\r\n                            <input type=\"password\"\r\n                                    id=\"password\"\r\n                                    name=\"password\"\r\n                                    value={pwdword.password}\r\n                                    onChange={onPasswordChange}\r\n                                    onBlur={validateInput}\r\n                                    class=\"form-control form-control-lg\" />\r\n                                    {error.password && <span className='err'>{error.password}</span>}\r\n                           \r\n                           \r\n                        </div>\r\n                        <div class=\"form-outline mb-4\">\r\n                        <label class=\"form-label\" htmlFor=\"confirmPassword\">Confirm Password</label>\r\n                            <input type=\"password\"\r\n                                    id=\"confirmPassword\"\r\n                                    name=\"confirmPassword\"\r\n                                    value={pwdword.confirmPassword}\r\n                                    onChange={onPasswordChange}\r\n                                    onBlur={validateInput}\r\n                                    class=\"form-control form-control-lg\" />\r\n                                    {error.confirmPassword && <span className='err'>{error.confirmPassword}</span>}\r\n                           \r\n\r\n                        </div>\r\n                        <div class=\"pt-1 mb-4\">\r\n                            <button class=\"btn btn-info btn-lg btn-block\" type=\"submit\">Update password</button>\r\n                        </div>\r\n                        \r\n                        <p>Back to login page <a href=\"/\" class=\"link-info\">Login here</a></p>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n      </div>\r\n    </div> \r\n    </section>\r\n        )\r\n}\r\n\r\nexport default ForgotPassword;",{"ruleId":"144","severity":1,"message":"145","line":1,"column":8,"nodeType":"146","messageId":"147","endLine":1,"endColumn":12},{"ruleId":"144","severity":1,"message":"148","line":4,"column":9,"nodeType":"146","messageId":"147","endLine":4,"endColumn":22},{"ruleId":"144","severity":1,"message":"149","line":2,"column":8,"nodeType":"146","messageId":"147","endLine":2,"endColumn":12},{"ruleId":"144","severity":1,"message":"150","line":5,"column":11,"nodeType":"146","messageId":"147","endLine":5,"endColumn":15},{"ruleId":"144","severity":1,"message":"151","line":6,"column":21,"nodeType":"146","messageId":"147","endLine":6,"endColumn":30},{"ruleId":"152","severity":1,"message":"153","line":74,"column":17,"nodeType":"154","endLine":74,"endColumn":76},{"ruleId":"155","severity":1,"message":"156","line":110,"column":72,"nodeType":"154","endLine":110,"endColumn":122},{"ruleId":"155","severity":1,"message":"156","line":112,"column":51,"nodeType":"154","endLine":112,"endColumn":99},{"ruleId":"144","severity":1,"message":"157","line":1,"column":17,"nodeType":"146","messageId":"147","endLine":1,"endColumn":25},{"ruleId":"155","severity":1,"message":"156","line":22,"column":12,"nodeType":"154","endLine":22,"endColumn":40},{"ruleId":"155","severity":1,"message":"156","line":25,"column":15,"nodeType":"154","endLine":25,"endColumn":45},{"ruleId":"155","severity":1,"message":"156","line":26,"column":15,"nodeType":"154","endLine":26,"endColumn":73},{"ruleId":"155","severity":1,"message":"156","line":27,"column":15,"nodeType":"154","endLine":27,"endColumn":68},{"ruleId":"155","severity":1,"message":"156","line":30,"column":17,"nodeType":"154","endLine":30,"endColumn":59},{"ruleId":"144","severity":1,"message":"158","line":1,"column":17,"nodeType":"146","messageId":"147","endLine":1,"endColumn":26},{"ruleId":"144","severity":1,"message":"157","line":1,"column":28,"nodeType":"146","messageId":"147","endLine":1,"endColumn":36},{"ruleId":"144","severity":1,"message":"159","line":2,"column":8,"nodeType":"146","messageId":"147","endLine":2,"endColumn":13},{"ruleId":"155","severity":1,"message":"156","line":22,"column":12,"nodeType":"154","endLine":22,"endColumn":40},{"ruleId":"155","severity":1,"message":"156","line":25,"column":15,"nodeType":"154","endLine":25,"endColumn":62},{"ruleId":"155","severity":1,"message":"156","line":26,"column":15,"nodeType":"154","endLine":26,"endColumn":74},{"ruleId":"155","severity":1,"message":"156","line":27,"column":15,"nodeType":"154","endLine":27,"endColumn":45},{"ruleId":"155","severity":1,"message":"156","line":30,"column":17,"nodeType":"154","endLine":30,"endColumn":59},{"ruleId":"144","severity":1,"message":"158","line":1,"column":17,"nodeType":"146","messageId":"147","endLine":1,"endColumn":26},{"ruleId":"144","severity":1,"message":"160","line":25,"column":19,"nodeType":"146","messageId":"147","endLine":25,"endColumn":26},{"ruleId":"155","severity":1,"message":"156","line":52,"column":12,"nodeType":"154","endLine":52,"endColumn":40},{"ruleId":"155","severity":1,"message":"156","line":55,"column":15,"nodeType":"154","endLine":55,"endColumn":62},{"ruleId":"155","severity":1,"message":"156","line":56,"column":15,"nodeType":"154","endLine":56,"endColumn":45},{"ruleId":"155","severity":1,"message":"156","line":57,"column":15,"nodeType":"154","endLine":57,"endColumn":68},{"ruleId":"155","severity":1,"message":"156","line":60,"column":17,"nodeType":"154","endLine":60,"endColumn":60},{"ruleId":"144","severity":1,"message":"161","line":18,"column":12,"nodeType":"146","messageId":"147","endLine":18,"endColumn":25},{"ruleId":"162","severity":1,"message":"163","line":56,"column":7,"nodeType":"164","endLine":56,"endColumn":9,"suggestions":"165"},{"ruleId":"144","severity":1,"message":"166","line":5,"column":9,"nodeType":"146","messageId":"147","endLine":5,"endColumn":19},{"ruleId":"155","severity":1,"message":"156","line":7,"column":12,"nodeType":"154","endLine":7,"endColumn":40},{"ruleId":"144","severity":1,"message":"161","line":18,"column":12,"nodeType":"146","messageId":"147","endLine":18,"endColumn":25},{"ruleId":"162","severity":1,"message":"163","line":54,"column":8,"nodeType":"164","endLine":54,"endColumn":10,"suggestions":"167"},{"ruleId":"144","severity":1,"message":"166","line":9,"column":9,"nodeType":"146","messageId":"147","endLine":9,"endColumn":19},{"ruleId":"144","severity":1,"message":"168","line":9,"column":30,"nodeType":"146","messageId":"147","endLine":9,"endColumn":41},{"ruleId":"162","severity":1,"message":"169","line":66,"column":7,"nodeType":"164","endLine":66,"endColumn":9,"suggestions":"170"},{"ruleId":"144","severity":1,"message":"158","line":1,"column":15,"nodeType":"146","messageId":"147","endLine":1,"endColumn":24},{"ruleId":"144","severity":1,"message":"149","line":3,"column":8,"nodeType":"146","messageId":"147","endLine":3,"endColumn":12},{"ruleId":"144","severity":1,"message":"171","line":83,"column":13,"nodeType":"146","messageId":"147","endLine":83,"endColumn":20},{"ruleId":"172","severity":1,"message":"173","line":127,"column":51,"nodeType":"174","messageId":"175","endLine":127,"endColumn":53},{"ruleId":"152","severity":1,"message":"153","line":152,"column":21,"nodeType":"154","endLine":152,"endColumn":80},{"ruleId":"144","severity":1,"message":"149","line":4,"column":8,"nodeType":"146","messageId":"147","endLine":4,"endColumn":12},{"ruleId":"144","severity":1,"message":"176","line":6,"column":8,"nodeType":"146","messageId":"147","endLine":6,"endColumn":14},{"ruleId":"144","severity":1,"message":"177","line":7,"column":8,"nodeType":"146","messageId":"147","endLine":7,"endColumn":19},{"ruleId":"152","severity":1,"message":"153","line":83,"column":17,"nodeType":"154","endLine":83,"endColumn":76},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'BrowserRouter' is defined but never used.","'Card' is defined but never used.","'Link' is defined but never used.","'useParams' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'useState' is defined but never used.","'useEffect' is defined but never used.","'axios' is defined but never used.","'tweetid' is assigned a value but never used.","'isLikePressed' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getUsertweets'. Either include it or remove the dependency array.","ArrayExpression",["178"],"'useHistory' is defined but never used.",["179"],"'useNavigate' is defined but never used.","React Hook useEffect has missing dependencies: 'getUserComments' and 'getUsertweet'. Either include them or remove the dependency array.",["180"],"'isValid' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Button' is defined but never used.","'SelectInput' is defined but never used.",{"desc":"181","fix":"182"},{"desc":"181","fix":"183"},{"desc":"184","fix":"185"},"Update the dependencies array to be: [getUsertweets]",{"range":"186","text":"187"},{"range":"188","text":"187"},"Update the dependencies array to be: [getUserComments, getUsertweet]",{"range":"189","text":"190"},[1859,1861],"[getUsertweets]",[1998,2000],[2052,2054],"[getUserComments, getUsertweet]"]